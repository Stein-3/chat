@page "/counter"
@using Microsoft.AspNetCore.SignalR.Client
@using Microsoft.AspNetCore.Authorization
@inject NavigationManager NavigationManager
@attribute [Authorize]
@implements IDisposable

<AuthorizeView>
    <Authorized>
        @{ userEmail = context.User.Identity.Name;}
        <div class="form-group">
            <label>
                Message:
                <input @bind="messageInput" size="50" />
            </label>
        </div>
        <button @onclick="Send" disabled="@(!IsConnected)">Send</button>

        <hr />

        <ul id="messageList">
            @foreach (var message in messages)
            {
                <li>@message</li>
            }
        </ul>
    </Authorized>
</AuthorizeView>

@code {
    private HubConnection hubConnection;

    private List<string> messages = new List<string>();

    private string userEmail;
    private string messageInput;
    private Guid roomId = new Guid("30677F2A-5615-4D11-3639-08D888932F58"); //TODO 動作確認用

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/chathub"))
            .Build();

        hubConnection.On<string, string, string>("ReceiveMessage", (handleName, user, message) =>
        {
            var encodedMsg = $"{handleName}: {message}";
            messages.Add(encodedMsg);
            StateHasChanged();
        });

        await hubConnection.StartAsync();

    }

    Task Send() =>
        hubConnection.SendAsync("SendMessage", userEmail, messageInput, roomId);

    public bool IsConnected =>
        hubConnection.State == HubConnectionState.Connected;

    public void Dispose()
    {
        _ = hubConnection.DisposeAsync();
    }

}