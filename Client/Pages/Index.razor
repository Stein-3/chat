@using Microsoft.AspNetCore.Authorization
@using blazorTest.Shared.Models
@inject NavigationManager NavigationManager
@inject HttpClient HttpClient
@attribute [Authorize]
@page "/"

<style type="text/css">
    .margin {
        margin-bottom: 2px;
    }
</style>

<div>
    <AuthorizeView>
        <Authorized>
            @{ userEmail = context.User.Identity.Name;}
            @if (rooms is null)
            {
                <div>ルームを読み取り中…</div>
            }
            else if (rooms.Count == 0)
            {
            }
            else
            {
                <h4>チャットルームを選択してください</h4>
                <ul class="nav flex-column">
                    @foreach (var room in rooms)
                    {
                        <li class="nav-item px-3 margin">
                            <NavLink class="btn btn-secondary" href=@("chat/" + room.Id)>
                                <span class="oi oi-document" aria-hidden="true"></span>@room.Name
                            </NavLink>
                        </li>
                    }
                </ul>
            }
            <hr />

            <h4>新規チャットルームを作成します</h4>
            <div>ルーム名 : </div>
            <input type="text" @bind="newRoomName" />
            <button class="btn btn-primary" @onclick="CreateRoom">新規ルーム作成</button>
        </Authorized>
    </AuthorizeView>

</div>

@code {
    private bool CanCareateNewRoom => !string.IsNullOrWhiteSpace(newRoomName);

    private string newRoomName = string.Empty;

    private string userEmail;

    private List<UserRoom> rooms;

    protected override async Task OnInitializedAsync()
    {
        rooms = await HttpClient
            .GetFromJsonAsync<List<UserRoom>>("Room");
    }

    private async Task CreateRoom()
    {
        if (!CanCareateNewRoom)
            return;

        var result = await HttpClient.PostAsJsonAsync<CreateRoom>("Room", new CreateRoom { RoomName = newRoomName, UserIds = new List<string> { userEmail } });

        rooms = await HttpClient
            .GetFromJsonAsync<List<UserRoom>>("Room");
    }
}
